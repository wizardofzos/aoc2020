/*--------------------------------------------[REXX]
| Advent of Code 2021          wizard@zdevops.com  |
+-------------------------------------------------*/
say ""                               /*      BEST */
say ""                               /*  ISPF-CLS */
say ""                               /*      EVER */
say " wizard@zdevops.com                           "
say "     _    ___   ____ ____   ___ ____   ___    "
say "    / \  / _ \ / ___|___ \ / _ \___ \ / _ \   "
say "   / _ \| | | | |     __) | | | |__) | | | |  "
say "  / ___ \ |_| | |___ / __/| |_| / __/| |_| |  "
say " /_/   \_\___/ \____|_____|\___/_____|\___/   "
say "                                              "
say "                             >DAY 01/PART 1<  "
say ""
/*------------------------------------------------*/

/* Open our input file, then read into the entries. stem */
"ALLOC FI(IN) DA('ZDO.AOC2020.D01.INPUT') SHR"
"EXECIO * DISKR IN (STEM entries. FINIS"
"FREE FI(IN)"


/* Let's keep tab on performance :) */
tries = 0
maxtries = entries.0 * entries.0
do i = 1 to entries.0
  /* Read all entries */
  if entries.i > 2020 then iterate        /* Skip this */
  do j = 1 to entries.0
    if j = i then iterate                 /* Skip this */
    if entries.j > 2020 then iterate      /* And skip this */
    if entries.i + entries.j = 2020 then do
      say "entry "i" and entry "j" add up to 2020"
      say "the answer is "entries.i * entries.j
      say "Score:"tries"/"maxtries" ("100-tries/maxtries*100"%)"
      /* Comment below to see all solutions */
      exit

    end
    else
      tries = tries + 1
  end
end
